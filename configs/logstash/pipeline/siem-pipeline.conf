input {
  # Beats input for Filebeat
  beats {
    port => 5044
  }
  
  # Syslog input for firewall and system logs
  syslog {
    port => 5000
    tags => ["syslog", "firewall"]
  }
  
  # TCP input for application logs
  tcp {
    port => 5001
    codec => json_lines
    tags => ["tcp", "application"]
  }
}

filter {
  # Parse timestamps
  date {
    match => [ "timestamp", "ISO8601", "yyyy-MM-dd HH:mm:ss", "MMM dd HH:mm:ss" ]
    target => "@timestamp"
  }
  
  # Firewall log parsing
  if "firewall" in [tags] {
    grok {
      match => { 
        "message" => "%{SYSLOGTIMESTAMP:timestamp} %{IPORHOST:firewall_host} %{WORD:action} %{IP:src_ip}:%{INT:src_port} -> %{IP:dst_ip}:%{INT:dst_port} %{WORD:protocol}( %{GREEDYDATA:extra_info})?"
      }
    }
    
    mutate {
      add_field => { "log_type" => "firewall" }
      add_field => { "event_category" => "network" }
    }
    
    # GeoIP enrichment for source IP
    geoip {
      source => "src_ip"
      target => "src_geoip"
    }
    
    geoip {
      source => "dst_ip" 
      target => "dst_geoip"
    }
  }
  
  # Authentication log parsing
  if "auth" in [tags] or [log][file][path] =~ /auth/ {
    grok {
      match => { 
        "message" => "%{SYSLOGTIMESTAMP:timestamp} %{IPORHOST:host} %{WORD:service}: %{WORD:auth_result} for %{USERNAME:user} from %{IP:src_ip}"
      }
    }
    
    mutate {
      add_field => { "log_type" => "authentication" }
      add_field => { "event_category" => "authentication" }
    }
    
    # Failed login detection
    if [auth_result] == "Failed" {
      mutate {
        add_field => { "security_alert" => "failed_login" }
        add_field => { "severity" => "medium" }
      }
    }
    
    # GeoIP for authentication attempts
    geoip {
      source => "src_ip"
      target => "src_geoip"
    }
  }
  
  # Add common enrichment fields
  mutate {
    add_field => { "[@metadata][index]" => "siem-logs-%{+YYYY.MM.dd}" }
    add_field => { "ingestion_timestamp" => "%{@timestamp}" }
  }
  
  # Remove unnecessary fields
  mutate {
    remove_field => [ "host", "agent", "ecs", "input" ]
  }
}

output {
  # Output to Elasticsearch
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "%{[@metadata][index]}"
  }
  
  # Debug output to stdout
  stdout {
    codec => rubydebug
  }
}
